[buildout]

extends = 
# "slapos" stack describes basic things needed for 99.9% of SlapOS Software
# Releases
  ../../stack/slapos.cfg
# Extend here component profiles, like openssl, apache, mariadb, curl...
# Or/and extend a stack (lamp, tomcat) that does most of the work for you
# In this example we only need the dash binary to run a simple "hello world"
# shell script.
  ../../component/dash/buildout.cfg
## install zerovm 1da3da25246c9a082b7dfb2986e8262cba3d16f3
## install toolchain 9b1b2a3750e4fc18b71a4c416647894948148f3c
## toolchain/README.md:
## sudo apt-get install libc6-dev-i386 libglib2.0-dev pkg-config git libzmq-dev build-essential automake autoconf libtool g++-multilib texinfo
# We suppose that libc6-dev-i386 and g++-multilib are already installed on the server in similar matter than libc
# XXX texinfo is needed on the server
  ../../component/glib/buildout.cfg
  ../../component/pkgconfig/buildout.cfg
  ../../component/git/buildout.cfg
  ../../component/libtool/buildout.cfg
  ../../component/zeromq/buildout.cfg
  ../../component/automake/buildout.cfg
  ../../component/autoconf/buildout.cfg


parts =
# Call installation of slapos.cookbook egg defined in stack/slapos.cfg (needed
# in 99,9% of Slapos Software Releases)
  slapos-cookbook
# Call creation of instance.cfg file that will be called for deployment of
# instance
  template

# Download instance.cfg.in (buildout profile used to deployment of instance),
# replace all ${foo:bar} parameters by real values, and change $${foo:bar} to
# ${foo:bar}
[template]
recipe = slapos.recipe.template
url = ${:_profile_base_location_}/instance.cfg.in
output = ${buildout:directory}/instance.cfg
# MD5 checksum can be skipped for development (easier to develop), but must be filled for production
md5sum = 1fc461c00e86485bee77a942f39e3c43
mode = 0644
